{
  "version": 2,
  "projects": {
    "batman": {
      "root": "apps/batman",
      "sourceRoot": "apps/batman/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/batman",
            "index": "apps/batman/src/index.html",
            "main": "apps/batman/src/main.tsx",
            "polyfills": "apps/batman/src/polyfills.ts",
            "tsConfig": "apps/batman/tsconfig.app.json",
            "assets": ["apps/batman/src/favicon.ico", "apps/batman/src/assets"],
            "styles": ["apps/batman/src/styles.scss"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/batman/src/environments/environment.ts",
                  "with": "apps/batman/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "batman:build",
            "hmr": true,
            "proxyConfig": "apps/batman/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "buildTarget": "batman:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/batman/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/batman"],
          "options": {
            "jestConfig": "apps/batman/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "batman-api": {
      "root": "apps/batman-api",
      "sourceRoot": "apps/batman-api/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/batman-api",
            "main": "apps/batman-api/src/main.ts",
            "tsConfig": "apps/batman-api/tsconfig.app.json",
            "assets": ["apps/batman-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/batman-api/src/environments/environment.ts",
                  "with": "apps/batman-api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "batman-api:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/batman-api/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/batman-api"],
          "options": {
            "jestConfig": "apps/batman-api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "docker": {
          "executor": "@nx-tools/nx-docker:build",
          "options": {
            "file": "apps/batman-api/Dockerfile",
            "push": false,
            "tags": ["mussia10/batman-api:latest", "mussia10/batman-api:v1"]
          }
        }
      }
    },
    "batman-e2e": {
      "root": "apps/batman-e2e",
      "sourceRoot": "apps/batman-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/batman-e2e/cypress.json",
            "devServerTarget": "batman:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "batman:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/batman-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "func1": {
      "root": "apps/func1",
      "sourceRoot": "apps/func1/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/func1",
            "main": "apps/func1/src/main.ts",
            "tsConfig": "apps/func1/tsconfig.app.json",
            "assets": ["apps/func1/src/assets"],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/func1/src/environments/environment.ts",
                  "with": "apps/func1/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "func1:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/func1/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/func1"],
          "options": {
            "jestConfig": "apps/func1/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "gcloud functions deploy func1 --runtime nodejs14 --trigger-http --region europe-west1 --allow-unauthenticated --entry-point=func1 --source=dist/apps/func1"
          }
        },
        "up-pulumi": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "pulumi up -y",
            "cwd": "apps/func1/pulumi"
          }
        },
        "down-pulumi": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "pulumi destroy -y",
            "cwd": "apps/func1/pulumi"
          }
        }
      }
    },
    "go-api": {
      "projectType": "application",
      "root": "apps/go-api",
      "sourceRoot": "apps/go-api",
      "targets": {
        "build": {
          "executor": "@nx-go/nx-go:build",
          "options": {
            "outputPath": "dist/apps/go-api",
            "main": "apps/go-api/main.go"
          }
        },
        "serve": {
          "executor": "@nx-go/nx-go:serve",
          "options": {
            "main": "apps/go-api/main.go"
          }
        },
        "test": {
          "executor": "@nx-go/nx-go:test"
        },
        "lint": {
          "executor": "@nx-go/nx-go:lint"
        }
      }
    },
    "my-package1": {
      "root": "libs/my-package1"
    },
    "robin": {
      "root": "apps/robin",
      "sourceRoot": "apps/robin",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/robin",
            "outputPath": "dist/apps/robin"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "robin:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "robin:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "robin:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/robin"],
          "options": {
            "jestConfig": "apps/robin/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/robin/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "robin-e2e": {
      "root": "apps/robin-e2e",
      "sourceRoot": "apps/robin-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/robin-e2e/cypress.json",
            "devServerTarget": "robin:serve",
            "tsConfig": "apps/robin-e2e/tsconfig.json"
          },
          "configurations": {
            "production": {
              "devServerTarget": "robin:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/robin-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "util-interfaces": {
      "root": "libs/util-interfaces",
      "sourceRoot": "libs/util-interfaces/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/util-interfaces/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/util-interfaces"],
          "options": {
            "jestConfig": "libs/util-interfaces/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/next"
  },
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "scss",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "style": "@emotion/styled",
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "robin"
}
